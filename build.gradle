buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "25.0.0"
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_DISABLE_FORMAT_STRING_CHECKS=TRUE"
                cFlags "-std=c99"
                cppFlags "-std=c++11"
            }
        }
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

ext {
    mrubyDir = 'mruby'
    buildHost = 'linux' // or msys
    if (System.getProperty('os.name').toLowerCase().startsWith("windows")) {
        ndkDir = System.getenv('ANDROID_NDK_HOME').replaceFirst('^([a-zA-Z]):', '/$1').replace("\\", "/")
    } else {
        ndkDir = System.getenv('ANDROID_NDK_HOME')
    }
}

task mrubyBuild(type: Exec) {
    workingDir mrubyDir
    switch (buildHost) {
        case 'msys':
            environment 'ANDROID_NDK_HOME', ndkDir
            commandLine 'C:/msys64/usr/bin/bash', '-c', 'export PATH="/usr/local/bin:/usr/bin"; rake -v'
            break
        default:
            commandLine 'bash', '-lc', 'rake -v'
            break
    }
}

task mrubyClean(type: Exec) {
    workingDir mrubyDir
    switch (buildHost) {
        case 'msys':
            environment 'ANDROID_NDK_HOME', ndkDir
            commandLine 'C:/msys64/usr/bin/bash', '-c', 'export PATH="/usr/local/bin:/usr/bin"; rake clean'
            break
        default:
            commandLine 'bash', '-lc', 'rake clean'
            break
    }
}

task mrubyDeepClean(type: Exec) {
    workingDir mrubyDir
    switch (buildHost) {
        case 'msys':
            environment 'ANDROID_NDK_HOME', ndkDir
            commandLine 'C:/msys64/usr/bin/bash', '-c', 'export PATH="/usr/local/bin:/usr/bin"; rake deep_clean'
            break
        default:
            commandLine 'bash', '-lc', 'rake deep_clean'
            break
    }
}

tasks.whenObjectAdded { task ->
    if (task.name.startsWith("externalNativeBuild")) {
        task.dependsOn mrubyBuild
    }
}

clean.dependsOn mrubyClean