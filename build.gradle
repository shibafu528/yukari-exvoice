buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
        }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'info.shibafu528.yukari'
archivesBaseName = 'yukari-exvoice'
version = new Date().format("yyyyMMdd.HHmmss")

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_DISABLE_FORMAT_STRING_CHECKS=TRUE"
                cFlags "-std=c11"
                cppFlags "-std=c++11"
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.guava:guava:22.0-android'
}

ext {
    mrubyDir = 'mruby'
    mrubyConfig = '../build_config.rb'
}

task mrubyBuild(type: Exec) {
    workingDir mrubyDir
    commandLine 'bash', '-lc', "MRUBY_CONFIG=$mrubyConfig rake -v"
}

task mrubyClean(type: Exec) {
    workingDir mrubyDir
    commandLine 'bash', '-lc', "MRUBY_CONFIG=$mrubyConfig rake clean"
}

task mrubyDeepClean(type: Exec) {
    workingDir mrubyDir
    commandLine 'bash', '-lc', "MRUBY_CONFIG=$mrubyConfig rake deep_clean"
}

tasks.whenObjectAdded { task ->
    if (task.name.startsWith("externalNativeBuild") && !task.name.contains("Clean")) {
        task.dependsOn mrubyBuild
    }
}

clean.dependsOn mrubyClean

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/yukari-exvoice-release.aar")
            groupId group
            artifactId archivesBaseName
            version version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')
    publications = ['Production']
    configurations = ['archives']
    override = true
    publish = true
    dryRun = false
    pkg {
        repo = 'maven'
        name = 'yukari-exvoice'
        description = "Pluggaloid bridge for Yukari"
        publicDownloadNumbers = true
        licenses = ['MIT']
        vcsUrl = 'https://github.com/shibafu528/yukari-exvoice.git'
        githubRepo = 'shibafu528/yukari-exvoice'
        version {
            name = this.version
            released = new Date()
        }
    }
}