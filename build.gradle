buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
        }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

group = 'info.shibafu528.yukari'
archivesBaseName = 'yukari-exvoice'
version = new Date().format("yyyyMMdd.HHmmss")

android {
    compileSdkVersion 23
    buildToolsVersion "27.0.3"
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_DISABLE_FORMAT_STRING_CHECKS=TRUE"
                cFlags "-std=c11"
                cppFlags "-std=c++11"
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.guava:guava:22.0-android'
    api "org.twitter4j:twitter4j-core:4.0.6"
}

ext {
    mrubyDir = 'mruby'
    mrubyConfig = '../build_config.rb'
}

task mrubyBuild(type: Exec) {
    workingDir mrubyDir
    commandLine 'bash', '-lc', "MRUBY_CONFIG=$mrubyConfig rake -v"
}

task mrubyClean(type: Exec) {
    workingDir mrubyDir
    commandLine 'bash', '-lc', "MRUBY_CONFIG=$mrubyConfig rake clean"
}

task mrubyDeepClean(type: Exec) {
    workingDir mrubyDir
    commandLine 'bash', '-lc', "MRUBY_CONFIG=$mrubyConfig rake deep_clean"
}

tasks.whenObjectAdded { task ->
    if (task.name.startsWith("externalNativeBuild") && !task.name.contains("Clean")) {
        task.dependsOn mrubyBuild
    }
}

clean.dependsOn mrubyClean

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: System.getenv("MVN_REPO_URL")) {
                authentication(userName: System.getenv("MVN_REPO_USER_NAME"), password: System.getenv("MVN_REPO_PASSWORD"))
            }
        }
    }
}